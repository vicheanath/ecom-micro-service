version: "3.2"
services:
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: "rabbitmq"
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - rabbitmq
    restart: unless-stopped

  mysqldb:
    image: mysql
    container_name: "mysqldb"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: root
      MYSQL_PASSWORD: root
    command:
      - --init-file
      - /docker-entrypoint-initdb.d/init.sql
    ports:
      - 3386:3306
    volumes:
      - ~/.docker-conf/mysql/data/:/var/lib/mysql
      - ~/.docker-conf/mysql/conf/:/etc/mysql/conf.d
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - rabbitmq
    restart: unless-stopped

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: "phpmyadmin"
    environment:
      PMA_HOST: mysqldb
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: root
    ports:
      - 8008:80
    networks:
      - rabbitmq
    restart: unless-stopped

  mongodb:
    image: mongo
    container_name: "mongodb"
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: catalog_db
    ports:
      - 27017:27017
    networks:
        - rabbitmq
    volumes:
      - ~/.docker-conf/mongodb/data:/data/db

  mongo-express:
      image: mongo-express
      container_name: "mongo-express"
      restart: always
      ports:
        - 8009:8081
      environment:
        ME_CONFIG_MONGODB_ADMINUSERNAME: root
        ME_CONFIG_MONGODB_ADMINPASSWORD: example
        ME_CONFIG_MONGODB_URL: mongodb://root:example@mongodb:27017/
        ME_CONFIG_BASICAUTH: false
      networks:
        - rabbitmq

networks:
    rabbitmq:
        driver: bridge